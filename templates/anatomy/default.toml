# '''
# description:
#   - all keys which are in <> are optional - if they are not in dict(data) then they are ignored
#   - all capital keys {ENV_VAR} are computed first and eather coming from outside or inside
#
# keys comming from outside:
#   {PYPE_STUDIO_PROJECTS_WORK}: str, referencing template env-var from `system/__locations__.toml`
#
#   {project.name}: str, full name of the project
#             example: C001_cool_commercial, D001_projectx
#
#   {project.code}: str, shorter version of project name 2-4 letters usually
#             example: ccm, prj, dogz
#
#   {AVALON_SILO}: str, the highest folder in the hierarchy of the asset, legacy
#
#   {asset}: str, name of the entity, e.g. sh010, bob, 101sh020
#             example: sh010, bob, car-big, 101sh050, sq02
#
#   {asset.type}: str, type of the entity,
#             example: shot, asset, sequence, folder
#
#   {family}: str, general type of the published file
#             example: model, cache, render, look, rig
#
#   {subset}: str, a published part of an asset. Always contains family string too
#             example: modelMain, modelDamaged, renderMain, lookMain
#
#   {version}: int, example: 14
#
#   {subversion}: int, a minor wersion within a workfile, example: 001, 0004
#
#   {frame}: int, a frame number in image sequences, example: 0001, 989, 49593
#
#   {representation}: str, example: abc, ma, nk, exr, png, curves, history, metadata
#
#   {padding:0>6}: int, number of frame from image sequence, example: ####, %04d
#
#   - {padding:0>6}: need to be careful because every app is referencing padding differently
# '''


[version]
  main = "v{VERSION}"
  sub = "<{SUBVERSION}>"

[resources]
  root = "{PYPE_STUDIO_PROJECTS_RESOURCES}/{project.name}/resources"
  raw = "{resources.root}/footage/raw"
  graded = "{resources.root}/footage/graded"
  reference = "{resources.root}/reference"

[work]
  root = "{PYPE_STUDIO_PROJECTS_WORK}/{project.name}"
  folder = "{hierarchy}/{asset}/work/{task}"
  filebase = "{project.code}_{asset}_{task}_{version.main}"
  file = "{work.filebase}<_{version.sub}><_{comment}>.{representation}"
  path = "{work.root}/{work.folder}/{work.file}"

[render]
  # TODO: check if it is possible to have conditional "or"
  root = "{PYPE_STUDIO_PROJECTS_RENDER}/{project.name}"
  folder = "{hierarchy}/{asset}/publish/render/{task}/{renderlayer}/{version.main}"
  file = "{work.filebase}_{renderlayer}<_{aov}>.{frame}.{representation}"
  path = "{render.root}/{render.folder}/{render.file}"

[publish]
  root = "{PYPE_STUDIO_PROJECTS_PUBLISH}/{project.name}"
  folder = "{hierarchy}/{asset}/publish/{family}/{subset}"
  file = "{project.code}_{asset}_{subset}_{version.main}<_{part}>.{representation}"
  filemaster = "{project.code}_{asset}_{subset}<_{part}>.{representation}"
  path = "{publish.root}/{publish.folder}/{version.main}/{publish.file}"
  pathmaster = "{publish.root}/{publish.folder}/{publish.filemaster}"
